export class ProductVariant {
    constructor(id, size, inventory, selected, barcode) {
        this.id = id;
        this.size = size;
        this.inventory = inventory;
        this.maxInventory = inventory;
        this.selected = selected;
        this.barcode = barcode;
    }
    setMainProductName(name) {
        this.mainProductName = name;
    }
    setMainProductImage(image) {
        this.mainProductImage = image;
    }
    setMainProductBrand(brand) {
        this.mainProductBrand = brand;
    }
    /**
     * Incrementa il numero di prodotti di questa variante selezionati
     */
    addProduct() {
        if (this.inventory - (this.selected + 1) <= 0) {
            throw new Error("Not enough items in the inventory");
        }
        this.selected++;
        this.inventory = this.inventory - this.selected;
    }
    getId() {
        return this.id;
    }
    getMaxInventory() {
        return this.maxInventory;
    }
    getInventory() {
        return this.inventory;
    }
    getSize() {
        return this.size;
    }
    getJson() {
        return JSON.stringify(this);
    }
    setId(id) {
        this.id = id;
    }
    setSize(size) {
        this.size = size;
    }
    setInventory(inventory) {
        this.inventory = inventory;
    }
    setSelected(select) {
        if (this.inventory - (this.selected + select) < 0) {
            throw new Error("Not enough items in the inventory");
        }
        this.selected = select;
        this.inventory = this.inventory - this.selected;
    }
    setSelectedAndUpdateInventory(select) {
        console.log("actual inventory = " + this.inventory + " actual selected items = " + this.selected + " new selected items = " + select);
        if (select >= this.selected) {
            //aggiungo items nell inventario
            this.inventory = this.selected;
            this.selected = select;
        }
        else {
            //tolgo items dall'inventario
            this.inventory = this.selected;
            this.selected = select;
        }
    }
    addSelected(select) {
        if ((this.inventory - select) < 0) {
            throw new Error("Not enough items in the inventory");
        }
        this.selected += select;
        this.inventory = this.inventory - select;
    }
    adminSetSelected(select) {
        this.selected = select;
    }
    getSelected() {
        return this.selected;
    }
    setBarcode(barcode) {
        this.barcode = barcode;
    }
}
//# sourceMappingURL=data:application/json;base64,