import { Inject, Injectable } from '@angular/core';
import { HttpClient, HttpParams } from '@angular/common/http';
import { map } from 'rxjs/operators';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common/http";
let categoryMap = new Map();
let brandMap = new Map();
export class ProductsService {
    constructor(http, environment) {
        this.http = http;
        this.environment = environment;
        this.apiUrlProducts = this.environment.apiURL + 'products';
        categoryMap.set("camicie", "61ab7dbaf6364e38a5b6297b");
        categoryMap.set("camice", "61ab7dbaf6364e38a5b6297b");
        categoryMap.set("polo", "61abf4a257450fc2517488f0");
        categoryMap.set("pantaloni", "61b631af0d7e33d82b524c10");
        categoryMap.set("giacche", "61bdddff2ddc4a8c13df4a17");
        categoryMap.set("felpe", "61bdf809872350f840c8979d");
        categoryMap.set("felpa", "61bdf809872350f840c8979d");
        categoryMap.set("maglioni", "61e1a62d81572bb64bd8d73b");
        categoryMap.set("gilet", "61e7cdc42eedad9135296d50");
        categoryMap.set("sneakers", "624ac34e9a3fb4d0bf04edd2");
        categoryMap.set("t-shirt", "624ac784503abba399845265");
        categoryMap.set("t-shirt ml", "624ac784503abba399845265");
        categoryMap.set("giubbotti", "624ac7f7503abba39984526d");
        categoryMap.set("giubbotto", "624ac7f7503abba39984526d");
        categoryMap.set("cinture", "632eb741544addd6ea6c2bdd");
        categoryMap.set("scarpe", "632eb754544addd6ea6c2be0");
        categoryMap.set("bermuda", "");
        categoryMap.set("jeans", "632eb762544addd6ea6c2be3");
        brandMap.set("blauer", "6213c7889309de960180da4a");
        brandMap.set("old river", "6213c89e9309de960180da4d");
        brandMap.set("colmar", "62167bd1cba8a1e0d9c1af88");
        brandMap.set("ea7", "62189efe1d62386cc22525b6");
        brandMap.set("fred perry", "62189f1e1d62386cc22525b9");
        brandMap.set("kway", "62189f371d62386cc22525bc");
        brandMap.set("lacoste", "62189f481d62386cc22525bf");
        brandMap.set("murphy&nye", "62189f7d1d62386cc22525c2");
        brandMap.set("peninsula", "62189f981d62386cc22525c5");
        brandMap.set("saucony", "62189fad1d62386cc22525c8");
        brandMap.set("sundek", "62189fbb1d62386cc22525cb");
        brandMap.set("barbour", "632e05f3b8c567de5ea83669");
        brandMap.set("ciesse", "636b57e2506ba65e593baa81");
        brandMap.set("husky", "636b57f3506ba65e593baa84");
        brandMap.set("husky fall", "636b57f3506ba65e593baa84");
        brandMap.set("canadiens", "636b5806506ba65e593baa87");
    }
    // BASIC
    // Get all products in the database - optional category query params
    getProducts(categoriesFilter) {
        let params = new HttpParams();
        if (categoriesFilter) {
            params = params.append('categories', categoriesFilter.join(','));
            console.log(params);
        }
        return this.http.get(this.apiUrlProducts, { params: params });
    }
    getFilteredProducts(brand, category, sex, taglie) {
        console.log("cerco con questi parametri-> brand = " + brand + " caetgory = + " + category + " sex = " + sex);
        let params = new HttpParams();
        if (brand != null && brand[0] != null && brand[0].length <= 9) {
            let objBrand;
            objBrand = [];
            brand.forEach(x => objBrand.push(brandMap.get(x)));
            params = params.append('brand', objBrand.join(','));
            console.log(params);
        }
        if (brand != null && brand[0] != null && brand[0].length > 9) {
            params = params.append('brand', brand.join(','));
            console.log(params);
        }
        if (category != null && category[0] != null && category[0].length <= 9) {
            let objCategory;
            objCategory = [];
            category.forEach(x => objCategory.push(categoryMap.get(x)));
            params = params.append('category', objCategory.join(','));
            console.log(params);
        }
        if (category != null && category[0] != null && category[0].length > 9) {
            params = params.append('category', category.join(','));
            console.log(params);
        }
        if (sex) {
            params = params.append('sex', sex.join(','));
        }
        if (taglie) {
            params = params.append('taglie', taglie.join(','));
        }
        return this.http.get(`${this.apiUrlProducts}/filteredProducts`, { params: params });
    }
    // SEX FILTER
    // Get products for men - optional categories query params
    getMProducts(categoriesFilter) {
        let params = new HttpParams();
        if (categoriesFilter) {
            params = params.append('categories', categoriesFilter.join(','));
            console.log(params);
        }
        return this.http.get(`${this.apiUrlProducts}/get/men-prods`, {
            params: params,
        });
    }
    // Get products for women - optional categories query params
    getWProducts(categoriesFilter) {
        let params = new HttpParams();
        if (categoriesFilter) {
            params = params.append('categories', categoriesFilter.join(','));
        }
        return this.http.get(`${this.apiUrlProducts}/get/women-prods`, {
            params: params,
        });
    }
    getAllProductsByBrand(brandFilter) {
        let params = new HttpParams();
        if (brandFilter) {
            params = params.append('brand', brandFilter);
        }
        return this.http.get(`${this.apiUrlProducts}/get/brand/all`, {
            params: params,
        });
    }
    getAllMProductsByBrand(brandFilter) {
        let params = new HttpParams();
        if (brandFilter) {
            params = params.append('brand', brandFilter);
        }
        return this.http.get(`${this.apiUrlProducts}/get/brand/men`, {
            params: params,
        });
    }
    getAllWProductsByBrand(brandFilter) {
        let params = new HttpParams();
        if (brandFilter) {
            params = params.append('brand', brandFilter);
        }
        return this.http.get(`${this.apiUrlProducts}/get/brand/women`, {
            params: params,
        });
    }
    // Get products for men - optional categories & brand query params
    getMproductsFilteredByCategoryAndBrand(categoriesFilter, brandFilter) {
        let params = new HttpParams();
        if (categoriesFilter) {
            params = params.append('categories', categoriesFilter.join(','));
        }
        if (brandFilter) {
            params = params.append('brand', brandFilter);
        }
        return this.http.get(`${this.apiUrlProducts}/get/brand-and-category/men`, {
            params: params,
        });
    }
    // Get products for women - optional categories & brand query params
    getWproductsFilteredByCategoryAndBrand(categoriesFilter, brandFilter) {
        let params = new HttpParams();
        if (categoriesFilter) {
            params = params.append('categories', categoriesFilter.join(','));
        }
        if (brandFilter) {
            params = params.append('brand', brandFilter);
        }
        return this.http.get(`${this.apiUrlProducts}/get/brand-and-category/women`, { params: params });
    }
    // Get all products filtered by brand only.
    getProductsByBrand(brandId) {
        return this.http.get(`${this.apiUrlProducts}/brand/${brandId}`);
    }
    getWProductsByBrand(brandId) {
        return this.http.get(`${this.apiUrlProducts}/brand/women-products/${brandId}`);
    }
    getProduct(productId) {
        let response = this.http.get(`${this.apiUrlProducts}/${productId}`);
        return response;
    }
    getProduct2(productId) {
        let response = this.http.get(`${this.apiUrlProducts}/${productId}`);
        return response;
    }
    getProductByName(prodName) {
        return this.http.get(`${this.apiUrlProducts}/prodname/${prodName}`);
    }
    createProduct(productData) {
        return this.http.post(this.apiUrlProducts, productData);
    }
    updateProduct(productData, productid) {
        return this.http.put(`${this.apiUrlProducts}/${productid}`, productData);
    }
    updateProductWithVariant(productData, productid) {
        return this.http.put(`${this.apiUrlProducts}/${productid}/add/variant`, productData);
    }
    deleteProduct(productId) {
        return this.http.delete(`${this.apiUrlProducts}/${productId}`);
    }
    getProductsCount() {
        return this.http
            .get(`${this.apiUrlProducts}/get/count`)
            .pipe(map((objectValue) => objectValue.productCount));
    }
    getFeaturedProducts() {
        return this.http.get(`${this.apiUrlProducts}/get/featured/`);
    }
    getFeaturedProductsByBrand(brand) {
        return this.http.get(`${this.apiUrlProducts}/get/featured/` + brand);
    }
    addGallery(productId, galleryFormData) {
        console.log("sending post request, adding to gallery!");
        return this.http.post(`${this.apiUrlProducts}/gallery-images/${productId}`, galleryFormData);
    }
}
ProductsService.ɵfac = function ProductsService_Factory(t) { return new (t || ProductsService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject('environment')); };
ProductsService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: ProductsService, factory: ProductsService.ɵfac, providedIn: 'root' });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(ProductsService, [{
        type: Injectable,
        args: [{
                providedIn: 'root',
            }]
    }], function () { return [{ type: i1.HttpClient }, { type: undefined, decorators: [{
                type: Inject,
                args: ['environment']
            }] }]; }, null); })();
//# sourceMappingURL=data:application/json;base64,