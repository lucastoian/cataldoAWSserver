import { Component, Input, ViewChild } from '@angular/core';
import { ActivatedRoute } from '@angular/router';
import { Paginator } from 'primeng/paginator';
import { Product123 } from '../../models/product123';
import { CategoriesService } from '../../services/categories.service';
import { ProductsService } from '../../services/products.service';
import { W_ProductsService } from '../../services/w-products.service';
import * as i0 from "@angular/core";
import * as i1 from "@angular/router";
import * as i2 from "../../services/products.service";
import * as i3 from "../../services/categories.service";
import * as i4 from "../../services/w-products.service";
import * as i5 from "primeng/multiselect";
import * as i6 from "@angular/forms";
import * as i7 from "primeng/paginator";
import * as i8 from "@angular/common";
import * as i9 from "../../components/product-item/product-item.component";
const _c0 = ["paginator"];
function ProductsBrandsComponent_div_32_div_1_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 23);
    i0.ɵɵelement(1, "eshop-frontend-product-item", 24);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const product_r2 = ctx.$implicit;
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("product", product_r2);
} }
function ProductsBrandsComponent_div_32_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 21);
    i0.ɵɵtemplate(1, ProductsBrandsComponent_div_32_div_1_Template, 2, 1, "div", 22);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = i0.ɵɵnextContext();
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngForOf", ctx_r0.productOnThisPage);
} }
const _c1 = function () { return { "width": "100%" }; };
const _c2 = function () { return { "width": "400px" }; };
export class ProductsBrandsComponent {
    constructor(route, productsService, catService, wProdService) {
        this.route = route;
        this.productsService = productsService;
        this.catService = catService;
        this.wProdService = wProdService;
        this.isChecked = false;
        this.binaryProp = true;
        this.products = [];
        this.productOnThisPage = [];
        this.wProds = [];
        this.filteredProducts = [];
        this.filtered = [];
        this.categories = [];
        this.currentBrand = { name: "luca", code: "ok" };
        this.first = 0;
        this.sex = "";
        this.brandMap = new Map();
        this.brandMap.set("6213c7889309de960180da4a", "Blauer");
        this.brandMap.set("6213c89e9309de960180da4d", "Old River");
        this.brandMap.set("62167bd1cba8a1e0d9c1af88", "Colmar");
        this.brandMap.set("62189efe1d62386cc22525b6", "EA7");
        this.brandMap.set("62189f1e1d62386cc22525b9", "Fred Perry");
        this.brandMap.set("62189f371d62386cc22525bc", "Kway");
        this.brandMap.set("62189f481d62386cc22525bf", "Lacoste");
        this.brandMap.set("62189f7d1d62386cc22525c2", "Murphy&nye");
        this.brandMap.set("62189f981d62386cc22525c5", "Peninsula");
        this.brandMap.set("62189fad1d62386cc22525c8", "Saucony");
        this.brandMap.set("62189fbb1d62386cc22525cb", "Sundek");
        this.brandMap.set("632e05f3b8c567de5ea83669", "Barbour");
        this.brandMap.set("636b57e2506ba65e593baa81", "Ciesse");
        this.brandMap.set("636b57f3506ba65e593baa84", "Husky");
        this.brandMap.set("husky fall", "636b57f3506ba65e593baa84");
        this.brandMap.set("636b5806506ba65e593baa87", "Canadiens");
        this.sesso = [{ name: 'Uomo', code: 'M' }, { name: 'Donna', code: 'F' }];
        this.categoria = [{ name: 'Camicie', code: 'camicie' }, { name: 'Cappotti', code: 'cappotti' }, { name: 'Polo', code: 'polo' }, { name: 'Giacche', code: 'giacche' }, { name: 'Pantaloni', code: 'pantaloni' }, { name: 'Felpe', code: 'felpe' }, { name: 'Maglioni', code: 'maglioni' }, { name: 'Gilet', code: 'gilet' }, { name: 'Sneakers', code: 'sneakers' }, { name: 'T-shirt', code: 't-shirt' }, { name: 'Giubbotti', code: 'giubbotti' }, { name: 'Cinture', code: 'cinture' }, { name: 'Scarpe', code: 'scarpe' }, { name: 'Jeans', code: 'jeans' },];
        this.brand = [{ name: 'Blauer', code: 'blauer' }, { name: 'Old River', code: 'old river' }, { name: 'Colmar', code: 'colmar' }, { name: 'EA7', code: 'ea7' }, { name: 'Kway', code: 'kway' }, { name: 'Lacoste', code: 'lacoste' }, { name: 'Barbour', code: 'barbour' }, { name: 'Ciesse', code: 'ciesse' }, { name: 'Husky', code: 'husky' }, { name: 'Canadiens', code: 'canadiens' }, { name: 'Saucony', code: 'saucony' }];
        this.taglia = [{ name: '37', code: '37' }, { name: '38', code: '38' }, { name: '39', code: '39' }, { name: '40', code: '40' }, { name: '41', code: '41' }, { name: '42', code: '42' }, { name: '43', code: '43' }, { name: '44', code: '44' }, { name: '45', code: '45' }, { name: '46', code: '46' }, { name: 'XXS', code: 'xxs' }, { name: 'XS', code: 'xs' }, { name: 'S', code: 's' }, { name: 'M', code: 'm' }, { name: 'L', code: 'l' }, { name: 'XL', code: 'xl' }, { name: 'XXL', code: 'xxl' }, { name: 'XXXL', code: 'xxxl' }];
    }
    ngOnInit() {
        this.selectedSex = [];
        this.selectedBrand = [];
        this.url = this.route.url;
        this._urlSegment = this.url.value[0].path;
        console.log("url segment = " + this._urlSegment);
        this._retrieveId();
        this._getProdByBrand();
        this.currentBrand = { name: "luca", code: "ciao" };
        this.currentBrand.name = this.brandMap.get(this.currentId);
        let nmm = this.currentBrand.name;
        let cdd = "";
        this.brand.forEach(function (element) {
            if (element.name == nmm) {
                cdd = element.code;
            }
        });
        this.currentBrand.code = cdd;
        // this._getCategories();
        this.fromCarousel = false;
        let storedSex = localStorage.getItem("categoria");
        if (storedSex == "uomo")
            this.selectedSex.push({ name: 'Uomo', code: 'M' });
        if (storedSex == "donna")
            this.selectedSex.push({ name: 'Donna', code: 'F' });
        this.selectedBrand.push({ name: this.currentBrand.name, code: this.currentBrand.code });
    }
    getKeyByValue(obj, value) {
        let data = Object.keys(obj).find(key => obj[key] === value);
        return data;
    }
    changePage(event) {
        console.log(" change page cerco tra questo indice : " + ((event.page * 10)) + " e questo " + ((event.page + 1) * 10) + " current page = " + this.currentPage);
        this.productOnThisPage = this.filtered.slice((event.page * 8), ((event.page + 1) * 8));
    }
    search(event) {
        this.products = [];
        this.filtered = [];
        let sesso23;
        sesso23 = [];
        if (this.selectedSex) {
            for (let i = 0; i < this.selectedSex.length; i++) {
                sesso23.push(this.selectedSex[i].code);
            }
        }
        console.log(sesso23);
        let categorie;
        categorie = [];
        if (this.selectedCategoria) {
            for (let i = 0; i < this.selectedCategoria.length; i++) {
                categorie.push(this.selectedCategoria[i].code);
            }
        }
        let brand;
        brand = [];
        if (this.selectedBrand) {
            for (let i = 0; i < this.selectedBrand.length; i++) {
                brand.push(this.selectedBrand[i].code);
            }
        }
        let taglie;
        taglie = [];
        if (this.selectedTaglia) {
            for (let i = 0; i < this.selectedTaglia.length; i++) {
                taglie.push(this.selectedTaglia[i].code);
            }
        }
        console.log("Sesso = " + sesso23 + " categorie = " + categorie);
        this.productsService.getFilteredProducts(brand, categorie, sesso23, taglie).subscribe((products) => {
            this.products = products;
            console.log("PRODOTTI = " + this.products);
            for (let i = 0; i < this.products.length; i++) {
                //console.log(this.products[i].productId)
                console.log("FIND:  #################ÀÀ " + this.findSameProducts(this.products, this.products[i]) + "    " + this.findSameProducts(this.products, this.products[i]) == null);
                if (this.findSameProducts(this.filtered, this.products[i]) == undefined) {
                    console.log("THIS ONE dosn't ALREADY EXIST: " + JSON.stringify(this.findSameProducts(this.products, this.products[i])));
                    this.filtered.push(this.products[i]);
                    console.log("added to filtered : " + this.filtered.length);
                    //   console.log("a questo indice " + i + " ce ne sono 2 uguali")
                    //     this.products =this.products.splice(i,1)
                }
            }
            //  this.shuffleArray(this.products);
            console.log(this.filtered);
            this.productOnThisPage = this.filtered.slice(0, 8);
            this.filteredProducts = this.filtered;
            //  setTimeout(() => this.paginator.changePage(1));
            this.first = 0;
        });
    }
    _retrieveId() {
        this.route.params.subscribe((params) => {
            this.currentId = params.brandId;
            console.log("brand id = " + this.currentId);
            console.log("brand name = " + this.brandName);
        });
    }
    findSameProducts(productsArray, productItem) {
        return productsArray.find((prodotto, index) => {
            // console.log("Visited index ", index, " with v alue ", prodotto.productId + " confrontato con ", productItem.productId + "   " + (prodotto.productId === productItem.productId) + " indice visitato ha questo id: " + prodotto.id + " quello confrontato ha questo id : "  + productItem.id);
            return (prodotto.productId === productItem.productId) && (prodotto.id != productItem.id);
        });
    }
    _getProdByBrand(categoriesFilter) {
        this.products = [];
        this.filtered = [];
        switch (localStorage.getItem("categoria")) {
            case "uomo":
                this.sex = "M";
                break;
            case "donna":
                this.sex = "F";
                break;
            default:
            // code block
        }
        this.productsService.getFilteredProducts([this.currentId], null, [this.sex], null).subscribe((products) => {
            this.products = products;
            this.filtered = [];
            console.log("PRODOTTI = " + this.products);
            for (let i = 0; i < this.products.length; i++) {
                //console.log(this.products[i].productId)
                console.log("FIND:  #################ÀÀ " + this.findSameProducts(this.products, this.products[i]) + "    " + this.findSameProducts(this.products, this.products[i]) == null);
                if (this.findSameProducts(this.filtered, this.products[i]) == undefined) {
                    console.log("THIS ONE dosn't ALREADY EXIST: " + JSON.stringify(this.findSameProducts(this.products, this.products[i])));
                    this.filtered.push(this.products[i]);
                    console.log("added to filtered : " + this.filtered.length);
                    //   console.log("a questo indice " + i + " ce ne sono 2 uguali")
                    //     this.products =this.products.splice(i,1)
                }
            }
            this.productOnThisPage = this.filtered.slice(0, 8);
            this.filteredProducts = this.filtered;
            console.log("ho trovato questi prodotti per questa categoria : " + this.products);
        });
    }
    categoryFilter() {
        this.products = [];
        this.filtered = [];
        const selectedCategories = this.categories.filter((category) => category.checked).map((category) => category.id);
        console.log("categorie = " + selectedCategories);
        this.productsService.getFilteredProducts([this.currentId], selectedCategories, [this.sex]).subscribe((products) => {
            this.products = products;
            console.log("PRODOTTI = " + this.products);
            for (let i = 0; i < this.products.length; i++) {
                //console.log(this.products[i].productId)
                console.log("FIND:  #################ÀÀ " + this.findSameProducts(this.products, this.products[i]) + "    " + this.findSameProducts(this.products, this.products[i]) == null);
                if (this.findSameProducts(this.filtered, this.products[i]) == undefined) {
                    console.log("THIS ONE dosn't ALREADY EXIST: " + JSON.stringify(this.findSameProducts(this.products, this.products[i])));
                    this.filtered.push(this.products[i]);
                    console.log("added to filtered : " + this.filtered.length);
                    //   console.log("a questo indice " + i + " ce ne sono 2 uguali")
                    //     this.products =this.products.splice(i,1)
                }
            }
            //  this.shuffleArray(this.products);
            console.log(this.filtered);
            this.productOnThisPage = this.filtered.slice(0, 8);
            this.filteredProducts = this.filtered;
        });
    }
}
ProductsBrandsComponent.ɵfac = function ProductsBrandsComponent_Factory(t) { return new (t || ProductsBrandsComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.ProductsService), i0.ɵɵdirectiveInject(i3.CategoriesService), i0.ɵɵdirectiveInject(i4.W_ProductsService)); };
ProductsBrandsComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ProductsBrandsComponent, selectors: [["eshop-frontend-products-brands"]], viewQuery: function ProductsBrandsComponent_Query(rf, ctx) { if (rf & 1) {
        i0.ɵɵviewQuery(_c0, 7);
    } if (rf & 2) {
        let _t;
        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.paginator = _t.first);
    } }, inputs: { product: "product" }, decls: 33, vars: 33, consts: [[1, "grid", 2, "justify-content", "center"], [1, "row", "filters"], [1, "col-12", "d-flex", 2, "justify-content", "center"], [1, "grid", "w-100"], [1, "row", "w-100"], [1, "col-12", 2, "height", "240px", "background-image", "url(https://sciuti.it/immagini/copertine/colmar-piumini-ai17-desktop.jpg)", "background-repeat", "no-repeat", "background-size", "cover"], [1, "col-12", 2, "font-size", "29px", "letter-spacing", "2px", "font-weight", "900"], [1, "col-12", 2, "max-height", "140px", "overflow-y", "auto"], ["id", "filtri", 1, "row", "w-100"], [1, "col-md-4", "col-6"], [1, "m-0", 2, "color", "rgb(52, 52, 52)", "letter-spacing", "2px", "font-weight", "700"], ["defaultLabel", "Genere", "optionLabel", "name", "display", "chip", 3, "options", "ngModel", "panelStyle", "onChange", "ngModelChange"], ["defaultLabel", "Categoria", "optionLabel", "name", "display", "chip", 3, "options", "ngModel", "panelStyle", "onChange", "ngModelChange"], ["defaultLabel", "Brand", "optionLabel", "name", "display", "chip", 3, "options", "ngModel", "panelStyle", "onChange", "ngModelChange"], [1, "col-md-3", "col-6", 2, "display", "none"], ["defaultLabel", "Taglia", "optionLabel", "name", "display", "chip", 3, "options", "ngModel", "panelStyle", "onChange", "ngModelChange"], [1, "row", 2, "justify-content", "center"], [1, "col-12"], [3, "rows", "totalRecords", "first", "onPageChange"], [1, "col-12", 2, "max-width", "1300px"], ["class", "grid  mobileProdListGrid", "style", "justify-content: center;", 4, "ngIf"], [1, "grid", "mobileProdListGrid", 2, "justify-content", "center"], ["class", "col-auto mobileProdList", 4, "ngFor", "ngForOf"], [1, "col-auto", "mobileProdList"], [3, "product"]], template: function ProductsBrandsComponent_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "div", 0)(1, "div", 1)(2, "div", 2)(3, "div", 3)(4, "div", 4);
        i0.ɵɵelement(5, "div", 5);
        i0.ɵɵelementEnd();
        i0.ɵɵelementStart(6, "div", 4)(7, "div", 6);
        i0.ɵɵtext(8);
        i0.ɵɵelementEnd();
        i0.ɵɵelementStart(9, "div", 7);
        i0.ɵɵtext(10, " Nata a Monza nel 1923, il nome dell\u2019azienda Colmar prende spunto dalle iniziali del suo fondatore Mario Colombo. Specializzata nell\u2019abbigliamento sportivo, l\u2019azienda italiana inizialmente presta maggiore attenzione a quello da sci. Ma \u00E8 nel 2009 che nasce la linea Colmar Original dedicata ai giovani e caratterizzata dallo storico logo vintage, da capi di qualit\u00E0 alla moda urban-lifestyle ma pur sempre d\u2019ispirazione sportiva. ");
        i0.ɵɵelementEnd()();
        i0.ɵɵelementStart(11, "div", 8)(12, "div", 9)(13, "p", 10);
        i0.ɵɵtext(14, "Genere");
        i0.ɵɵelementEnd();
        i0.ɵɵelementStart(15, "p-multiSelect", 11);
        i0.ɵɵlistener("onChange", function ProductsBrandsComponent_Template_p_multiSelect_onChange_15_listener($event) { return ctx.search($event); })("ngModelChange", function ProductsBrandsComponent_Template_p_multiSelect_ngModelChange_15_listener($event) { return ctx.selectedSex = $event; });
        i0.ɵɵelementEnd()();
        i0.ɵɵelementStart(16, "div", 9)(17, "p", 10);
        i0.ɵɵtext(18, "Categorie");
        i0.ɵɵelementEnd();
        i0.ɵɵelementStart(19, "p-multiSelect", 12);
        i0.ɵɵlistener("onChange", function ProductsBrandsComponent_Template_p_multiSelect_onChange_19_listener($event) { return ctx.search($event); })("ngModelChange", function ProductsBrandsComponent_Template_p_multiSelect_ngModelChange_19_listener($event) { return ctx.selectedCategoria = $event; });
        i0.ɵɵelementEnd()();
        i0.ɵɵelementStart(20, "div", 9)(21, "p", 10);
        i0.ɵɵtext(22, "Brand");
        i0.ɵɵelementEnd();
        i0.ɵɵelementStart(23, "p-multiSelect", 13);
        i0.ɵɵlistener("onChange", function ProductsBrandsComponent_Template_p_multiSelect_onChange_23_listener($event) { return ctx.search($event); })("ngModelChange", function ProductsBrandsComponent_Template_p_multiSelect_ngModelChange_23_listener($event) { return ctx.selectedBrand = $event; });
        i0.ɵɵelementEnd()();
        i0.ɵɵelementStart(24, "div", 14)(25, "p", 10);
        i0.ɵɵtext(26, "Taglie");
        i0.ɵɵelementEnd();
        i0.ɵɵelementStart(27, "p-multiSelect", 15);
        i0.ɵɵlistener("onChange", function ProductsBrandsComponent_Template_p_multiSelect_onChange_27_listener($event) { return ctx.search($event); })("ngModelChange", function ProductsBrandsComponent_Template_p_multiSelect_ngModelChange_27_listener($event) { return ctx.selectedTaglia = $event; });
        i0.ɵɵelementEnd()()()()()();
        i0.ɵɵelementStart(28, "div", 16)(29, "div", 17)(30, "p-paginator", 18);
        i0.ɵɵlistener("onPageChange", function ProductsBrandsComponent_Template_p_paginator_onPageChange_30_listener($event) { return ctx.changePage($event); });
        i0.ɵɵelementEnd()();
        i0.ɵɵelementStart(31, "div", 19);
        i0.ɵɵtemplate(32, ProductsBrandsComponent_div_32_Template, 2, 1, "div", 20);
        i0.ɵɵelementEnd()()();
    } if (rf & 2) {
        i0.ɵɵadvance(8);
        i0.ɵɵtextInterpolate1(" ", ctx.currentBrand.name, " ");
        i0.ɵɵadvance(7);
        i0.ɵɵstyleMap(i0.ɵɵpureFunction0(25, _c1));
        i0.ɵɵproperty("options", ctx.sesso)("ngModel", ctx.selectedSex)("panelStyle", i0.ɵɵpureFunction0(26, _c2));
        i0.ɵɵadvance(4);
        i0.ɵɵstyleMap(i0.ɵɵpureFunction0(27, _c1));
        i0.ɵɵproperty("options", ctx.categoria)("ngModel", ctx.selectedCategoria)("panelStyle", i0.ɵɵpureFunction0(28, _c2));
        i0.ɵɵadvance(4);
        i0.ɵɵstyleMap(i0.ɵɵpureFunction0(29, _c1));
        i0.ɵɵproperty("options", ctx.brand)("ngModel", ctx.selectedBrand)("panelStyle", i0.ɵɵpureFunction0(30, _c2));
        i0.ɵɵadvance(4);
        i0.ɵɵstyleMap(i0.ɵɵpureFunction0(31, _c1));
        i0.ɵɵproperty("options", ctx.taglia)("ngModel", ctx.selectedTaglia)("panelStyle", i0.ɵɵpureFunction0(32, _c2));
        i0.ɵɵadvance(3);
        i0.ɵɵproperty("rows", 1)("totalRecords", ctx.filtered.length / 8)("first", ctx.first);
        i0.ɵɵadvance(2);
        i0.ɵɵproperty("ngIf", ctx.productOnThisPage);
    } }, directives: [i5.MultiSelect, i6.NgControlStatus, i6.NgModel, i7.Paginator, i8.NgIf, i8.NgForOf, i9.ProductItemComponent], styles: [".filters[_ngcontent-%COMP%]{width:100%}@media screen and (max-width: 516px){.mobileProdList[_ngcontent-%COMP%]{padding:3px}}@media screen and (min-width: 516px){.filters[_ngcontent-%COMP%]{width:95%}}@media screen and (min-width: 1500px){.filters[_ngcontent-%COMP%]{width:92%}}@media screen and (min-width: 1850px){.filters[_ngcontent-%COMP%]{width:89%}}@media screen and (min-width: 1950px){.filters[_ngcontent-%COMP%]{width:80%}}"] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(ProductsBrandsComponent, [{
        type: Component,
        args: [{ selector: 'eshop-frontend-products-brands', template: "<script src=\"//ajax.googleapis.com/ajax/libs/jquery/2.0.3/jquery.min.js\"></script>\n\n\n  <div class=\"grid\" style=\"justify-content: center;\">\n    \n    <div class=\"row filters\">\n      <div class=\"col-12 d-flex\" style=\"justify-content: center;\">\n        \n          <div class=\"grid w-100\">\n            <div class=\"row w-100\">\n              <div class=\"col-12\" style=\"height: 240px; background-image: url(https://sciuti.it/immagini/copertine/colmar-piumini-ai17-desktop.jpg); background-repeat: no-repeat; background-size: cover;\">\n               \n              </div>\n            </div>\n            <div class=\"row w-100\">\n              <div class=\"col-12\" style=\"font-size: 29px; letter-spacing:2px; font-weight: 900;\">\n               {{this.currentBrand.name}}\n              </div>\n              <div class=\"col-12\" style=\"max-height: 140px; overflow-y:auto\">\n                Nata a Monza nel 1923, il nome dell\u2019azienda Colmar prende spunto dalle iniziali del suo fondatore Mario Colombo. Specializzata nell\u2019abbigliamento sportivo, l\u2019azienda italiana inizialmente presta maggiore attenzione a quello da sci. Ma \u00E8 nel 2009 che nasce la linea Colmar Original dedicata ai giovani e caratterizzata dallo storico logo vintage, da capi di qualit\u00E0 alla moda urban-lifestyle ma pur sempre d\u2019ispirazione sportiva.\n               </div>\n            </div>\n\n            <div class=\"row w-100\" id=\"filtri\">\n              <div class=\"col-md-4 col-6\">\n                <p class=\"m-0\" style=\"color: rgb(52, 52, 52); letter-spacing: 2px; font-weight: 700;\">Genere</p>\n                <p-multiSelect (onChange)=\"search($event)\"  defaultLabel=\"Genere\" [options]=\"sesso\" [(ngModel)]=\"selectedSex\" optionLabel=\"name\" display=\"chip\"  [style]=\"{'width':'100%'}\"\n              [panelStyle]=\"{'width':'400px'}\"></p-multiSelect>\n              </div>\n\n              <div class=\"col-md-4 col-6\">\n                <p class=\"m-0\" style=\"color: rgb(52, 52, 52); letter-spacing: 2px; font-weight: 700;\">Categorie</p>\n                <p-multiSelect (onChange)=\"search($event)\"  defaultLabel=\"Categoria\" [options]=\"categoria\" [(ngModel)]=\"selectedCategoria\" optionLabel=\"name\" display=\"chip\"  [style]=\"{'width':'100%'}\"\n                [panelStyle]=\"{'width':'400px'}\"></p-multiSelect>\n              </div>\n\n              <div class=\"col-md-4 col-6\">\n                <p class=\"m-0\" style=\"color: rgb(52, 52, 52); letter-spacing: 2px; font-weight: 700;\">Brand</p>\n                <p-multiSelect (onChange)=\"search($event)\"  defaultLabel=\"Brand\" [options]=\"brand\" [(ngModel)]=\"selectedBrand\" optionLabel=\"name\" display=\"chip\"  [style]=\"{'width':'100%'}\"\n                [panelStyle]=\"{'width':'400px'}\"></p-multiSelect>\n              </div>\n              <div class=\"col-md-3 col-6\" style=\"display:none\">\n                <p class=\"m-0\" style=\"color: rgb(52, 52, 52); letter-spacing: 2px; font-weight: 700;\">Taglie</p>\n                <p-multiSelect (onChange)=\"search($event)\"  defaultLabel=\"Taglia\" [options]=\"taglia\" [(ngModel)]=\"selectedTaglia\" optionLabel=\"name\" display=\"chip\"  [style]=\"{'width':'100%'}\"\n                [panelStyle]=\"{'width':'400px'}\"></p-multiSelect>\n              </div>\n            </div>\n          </div>\n\n      </div>\n    </div>\n    \n\n    <div class=\"row\" style=\"justify-content: center;\">\n      <div class=\"col-12\">    <p-paginator [rows]=\"1\" (onPageChange)=\"changePage($event)\"[totalRecords]=\"filtered.length/8\" [first] = 'first'></p-paginator></div>\n    <div class=\"col-12\"  style=\"max-width: 1300px;\">\n      <div class=\"grid  mobileProdListGrid\" style=\"justify-content: center;\"  *ngIf=\"productOnThisPage\" >\n        <div class=\"col-auto mobileProdList\" *ngFor=\"let product of productOnThisPage\">\n\n          <eshop-frontend-product-item [product]=\"product\" ></eshop-frontend-product-item>\n        </div>\n\n      </div>\n    </div>\n  </div>\n  </div>\n\n", styles: [".filters{width:100%}@media screen and (max-width: 516px){.mobileProdList{padding:3px}}@media screen and (min-width: 516px){.filters{width:95%}}@media screen and (min-width: 1500px){.filters{width:92%}}@media screen and (min-width: 1850px){.filters{width:89%}}@media screen and (min-width: 1950px){.filters{width:80%}}\n"] }]
    }], function () { return [{ type: i1.ActivatedRoute }, { type: i2.ProductsService }, { type: i3.CategoriesService }, { type: i4.W_ProductsService }]; }, { product: [{
            type: Input
        }], paginator: [{
            type: ViewChild,
            args: ['paginator', { static: true }]
        }] }); })();
//# sourceMappingURL=data:application/json;base64,